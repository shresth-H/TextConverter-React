{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleState","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4577648.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n    </li>*/}\r\n      </ul>\r\n      {/*<form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n        <div className={`form-check form-switch text-${props.mode === 'dark'?'light':'dark'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleState} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>  \r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}\r\n\r\nNavbar.defaultProps = {title: \"Web\"}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\")\r\n        //setText(\"You have clicked on handleUpClick\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text has been converted to uppercase\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        //console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleDownClick= ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText) ;\r\n        props.showAlert(\"Text has been converted to lowercase\",\"success\");\r\n    }\r\n\r\n    const handleClearClick= ()=>{\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"Text is now been cleared\",\"success\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n        <h2 style={{color:props.mode === 'dark'?'white':'black'}}>{props.heading}</h2>\r\n        <div className=\"my-3\">\r\n        <textarea className=\"form-control\" value={text} id=\"myBox\" onChange={handleOnChange} rows=\"10\" style={{backgroundColor:props.mode === 'dark'?'#a76bcf':'white',color:props.mode === 'dark'?'white':'black'}}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>CLear the Text</button>\r\n         </div>\r\n        <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'black'}}>\r\n            <h2>Summary</h2>\r\n            <p>{text.split(\" \").length-1} words {text.length} characters</p>\r\n            <p>{0.008 * (text.split(\" \").length-1)} Average reading time</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    \r\n    const capitalize = (word)=>{\r\n        const lower =  word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}: </strong>{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n*/\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n  }\n\n\n  const toggleState = ()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = 'purple';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n    {/*<Router>\n    <Navbar title=\"Website\" mode={mode} toggleState={toggleState}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-2\">\n      <Switch>\n        <Route exact path=\"/\">\n        <TextForm heading=\"Analyse the Text\" mode={mode} showAlert={showAlert}/>\n        </Route>\n        <Route exact path=\"/about\">\n        <About/>\n        </Route>\n      </Switch>\n    </div>\n    </Router>*/}\n    <Navbar title=\"Website\" mode={mode} toggleState={toggleState}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-2\">\n        <TextForm heading=\"Analyse the Text\" mode={mode} showAlert={showAlert}/>\n    </div>\n    </>\n  );    \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}